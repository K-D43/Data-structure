# Data-structure
import java.util.*;
//public class Classroom{
//
//    static class Edge{
//        int src;
//        int dest;
////        int weight;
//        Edge(int s,int d){
//            this.src=s;
//            this.dest=d;
////            this.weight=w;
//        }
//    }
//    public static void createGraph(ArrayList<Edge> graph[]){
//        for (int i=0;i<graph.length;i++){
//            graph[i]=new ArrayList<Edge>();
//        }
//
//        graph[0].add(new Edge(0,1));
//        graph[0].add(new Edge(0,2));
//
//        graph[1].add(new Edge(1,0));
//        graph[1].add(new Edge(1,3));
//
//        graph[2].add(new Edge(2,0));
//        graph[2].add(new Edge(2,4));
//
//        graph[3].add(new Edge(3,1));
//        graph[3].add(new Edge(3,5));
//
//        graph[3].add(new Edge(4,2));
//        graph[3].add(new Edge(4,5));
//
//        graph[3].add(new Edge(5,3));
//        graph[3].add(new Edge(5,4));
//        graph[3].add(new Edge(5,6));
//
//    }
//    public static void bfs(ArrayList<Edge> graph[],int V,boolean vis[],int start){
//        Queue<Integer> q=new LinkedList<>();
//
//        q.add(start);
//        while(!q.isEmpty()){
//            int curr=q.remove();
//            if(vis[curr]==false){
//                System.out.println(curr+" ");
//                vis[curr]=true;
//                for(int i=0;i<graph[curr].size();i++){
//                    Edge e=graph[curr].get(i);
//                    q.add(e.dest);
//                }
//            }
//        }
//    }
//
//    public static void main(String[] args) {
//        int V=7;
//
//        boolean vis[]=new boolean[V];
//        ArrayList<Edge> graph[]=new ArrayList[V];
//        createGraph(graph);
//        for(int i=0;i<V;i++){
//            if (vis[i]==false){
//                bfs(graph,V,vis,i);
//            }
//        }
//    }
//}
